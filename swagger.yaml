swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /view/{transactionId}:
    get:
      tags:
        - Transaction View Module
      summary: Get Transaction View
      description: API endpoint to view a specific transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: The transaction ID to view
      security:
        - Bearer: []
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            $ref: "#/definitions/PatchTransaction"
        "400":
          description: Invalid transaction ID
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /transactions/:
    get:
      tags:
        - Transactions Module
      summary: Get All Transactions
      description: API endpoint for fetching all transactions for a specific user
      parameters:
        - name: userId
          in: path
          required: true
          type: string
          description: The user ID to fetch transactions for
        - name: startDate
          in: query
          required: false
          type: string
          format: date
          description: Start date of the period to retrieve transactions
        - name: endDate
          in: query
          required: false
          type: string
          format: date
          description: End date of the period to retrieve transactions
      security:
        - Bearer: []
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "400":
          description: Invalid user ID
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User not found
        "500":
          description: Internal Server Error

  /transactions/{transactionId}:
    get:
      tags:
        - Transactions Module
      summary: Get a Transaction
      description: fetching a specific transaction for a specific user
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: ID of the transaction to retrieve
      security:
        - Bearer: []
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid transactionID
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User or Transaction not found
        "500":
          description: Internal Server Error
    post:
      tags:
        - Transactions Module
      summary: Add a Transaction
      description: API endpoint for creating a transaction for a specific user
      parameters:
        - name: userId
          in: path
          required: true
          type: string
          description: The user ID to fetch transaction for
      security:
        - Bearer: []
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: "#/definitions/NewTransaction"
        "400":
          description: Invalid user ID
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User not found
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Transactions Module
      summary: Modify a Transaction
      description: API endpoint for modifying a transaction for a specific user
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: The transaction ID to modify
          parameters:
        - in: body
          name: body
          description: Transaction Payload
          required: true
          schema:
            $ref: "#/definitions/PatchTransaction"
      security:
        - Bearer: []
      responses:
        "200":
          description: Transaction modified successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Transaction or user not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  UserTransaction:
  type: object
  properties:
    transaction:
      type: string
    transactionDescription:
      type: string
  Transaction:
    type: object
    properties:
      date:
        type: string
        format: date-time
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
      transactionType:
        type: string
      category:
        type: string
      note:
        type: string
  NewTransaction:
    type: object
    properties:
      date:
        type: string
        format: date-time
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
      transactionType:
        type: string
      category:
        type: string
      note:
        type: string
  PatchTransaction:
    type: object
    properties:
      date:
        type: string
        format: date-time
      transactionId:
        type: string
      category:
        type: string
      note:
        type: string
